<?xml version="1.0"?>
<project name="Lab3" default="main" basedir=".">
    <taskdef resource="net/sf/antcontrib/antlib.xml">
        <classpath>
            <pathelement location="lib/ant-contrib-1.0b3.jar" />
        </classpath>
    </taskdef>

    <property file="build.properties"/>

    <path id="classpath.test">
        <pathelement location="${junit.lib}"/>
        <pathelement location="${hamcrest-core}"/>
        <pathelement location="${ant.junit.lib}"/>
        <pathelement location="${ant.contrib}"/>
    </path>

    <target name="compile" depends="clean">
        <echo>Let's compileeee (Task1)</echo>
        <mkdir dir="${compiled.classes}"/>
        <mkdir dir="${compiled.tests}"/>

        <javac destdir="${compiled.classes}" includeantruntime="false">
            <src path="${src}"/>
            <classpath>
                <pathelement location="${compiled.classes}"/>
                <path refid="classpath.test"/>
            </classpath>
        </javac>

        <javac destdir="${compiled.tests}" includeantruntime="false">
            <src path="${test}"/>
            <classpath>
                <pathelement location="${compiled.classes}"/>
                <path refid="classpath.test"/>
            </classpath>
        </javac>

        <echo>Compile done !</echo>
    </target>

    <target name="build" depends="compile">
        <echo>Let's buildddd (Task2)</echo>
        <jar destfile="${jar}" basedir="${compiled.classes}" compress="false" index="true">
            <manifest>
                <attribute name="Main-Class" value="Lab3"/>
            </manifest>
        </jar>
        <echo>Build successfully (done Task2)</echo>
    </target>

    <target name="clean">
        <echo>It's time to clean your project</echo>
        <delete dir="${compiled.classes}"/>
        <delete dir="${compiled.tests}"/>
        <delete file="${jar}"/>
        <echo>Ok done for cleaning (Task3)</echo>
    </target>

    <target name="test" depends="build">
        <mkdir dir="${report}"/>
        <junit haltonfailure="yes" haltonerror="yes">
            <formatter type="xml"/>
            <classpath location="$../lib/junit-4.13.2.jar"/>
            <classpath location="$../lib/hamcrest-core-1.3.jar"/>
            <classpath>
                <path refid="classpath.test"/>
                <pathelement location="${compiled.classes}"/>
                <pathelement location="${compiled.tests}"/>
            </classpath>
            <batchtest todir="${report}">
                <fileset dir="test" includes="*Test*.java"/>
            </batchtest>
        </junit>
    </target>

    <target name="xml">
        <echo>Let's validate xml files (Task5)</echo>
        <xmlvalidate lenient="yes">
            <fileset dir="." includes="*/*.xml"/>
        </xmlvalidate>
        <echo>Okay, done validate (done task5)</echo>
    </target>

    <!--Task 6: Work with SVN-->
    <target name="diff">
        <exec executable="svn" outputproperty="svn_diff_result">
            <arg value="status"/>
        </exec>
        <for param="name" list="${classnames}" delimiter=" ">
            <sequential>
                <condition property="found-diff">
                    <contains string="${svn_diff_result}" substring="@{name}.java"/>
                </condition>
            </sequential>
        </for>
        <antcall target="commit"/>
    </target>

    <target name="commit" if="${found-diff}">
        <exec executable="svn">
            <arg line="add"/>
            <arg value="*"/>
            <arg value="--force"/>
        </exec>

        <exec executable="svn">
            <arg value="commit"/>
            <arg value="-m 'ant commit'"/>
        </exec>
    </target>

    <target name="main" depends="compile,build">
        <description>This is the main target</description>
        <antcall target="test"/>
        <antcall target="xml"/>
        <antcall target="diff"/>
    </target>
</project>